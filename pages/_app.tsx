import { ChakraProvider } from "@chakra-ui/react";
import Head from "next/head";
import "reset-css";

import { createBrowserSupabaseClient } from "@supabase/auth-helpers-nextjs";
import { SessionContextProvider } from "@supabase/auth-helpers-react";
import { useState } from "react";

import "@fontsource/lato/300.css";
import "@fontsource/lato/400.css";
import "@fontsource/lato/700.css";
import "@fontsource/lato/900.css";

import ".././styles/globals.css";
import Layout from "../components/Layout";

import { theme } from "../theme";
import { Suspense } from "react";
import { useRouter } from "next/router";
import SidebarWithAvatar from "../components/SidebarWithAvatar";
import { RestaurantProvider } from "../context/restaurantContext";

// const PwaUpdater = dynamic(() => import("../utils/PwaUpdater"), { ssr: false });

export default function App({ Component, pageProps }: any) {
  const [supabase] = useState(() => createBrowserSupabaseClient());
  const router = useRouter();

  return (
    <ChakraProvider theme={theme} cssVarsRoot="body">
      <SessionContextProvider
        supabaseClient={supabase}
        initialSession={pageProps.initialSession}
      >
        <RestaurantProvider>
          {/* <PwaUpdater msg="we want to send you notification" />        */}
          <Head>
            <title>ta&apos;am - serve better</title>
            <meta name="description" content="Generated by create next app" />
            <meta
              name="viewport"
              content="width=device-width, initial-scale=1"
            />
            <link rel="icon" href="/favicon.ico" />
          </Head>
          <main>
            {Component.authPage ? (
              <Component {...pageProps} />
            ) : router.pathname === "/RegisterRestaurant" ? (
              <Component {...pageProps} />
            ) : (
              <Layout>
                <Suspense fallback="loading....">
                  <Component {...pageProps} />
                </Suspense>
              </Layout>
            )}
          </main>
        </RestaurantProvider>
      </SessionContextProvider>
    </ChakraProvider>
  );
}
